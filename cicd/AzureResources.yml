##########################################################################
# Name plus CI trigger on all files that get added in opsscripts folder  #
##########################################################################

name: $(majorVersion).$(minorVersion).$(patch)

##########################################################################
#       Variables                                                        #
##########################################################################

variables:
  rgName: "rg-dbaautomation"          #   The Resource Group name     #  
  rgLocation: "westeurope"            #   The region location         #
  ip: ""                              #   The public IP address       # 
  azSqlDatabaseName: "Estate"         #   The Azure SQL database name #
  azSQLServerName: "sqlestate"        #   The Azure SQL server name   #
  adminSqlLogin: "SqlAdministrator"   #   The Azure SQL login         #
  majorVersion: 1     
  minorVersion: 0
  patch: $[counter(format('{0}.{1}', variables['MajorVersion'], variables['MinorVersion']), 0)]
  buildNumber: $(MajorVersion).$(MinorVersion).$(Patch)
  artifactName: "DBOPackage"          #   The artifact name           #

##########################################################################
#                                                                        #
#               Deploy Azure SQL in Azure                                #
#                                                                        #
##########################################################################

stages:
  - stage: "CreateDB"
    displayName: "Create database"
    jobs:

      ##########################################################################
      #       Job: Create Azure SQL                                            #
      ##########################################################################

      - job: "Database"
        displayName: "Create database"
        pool: 
          vmImage: 'windows-latest'

        steps:
          - task: AzurePowerShell@5
            name: "Database"
            displayName: "Create Azure SQL database"
            inputs:
              azureSubscription: "ServiceConnection"
              ScriptType: "InlineScript"
              Inline: |
                $rg = Get-AzResourceGroup -Name $(rgName) -ErrorAction SilentlyContinue
                if (-not $rg) {
                    New-AzResourceGroup -Name $(rgName) -Location "$(rgLocation)"
                }
                                                
                $azSQLServerName = "$(azSQLServerName)"
                $azSqlServer = Get-AzSqlServer -ServerName $azSQLServerName 
                if (-not $azSqlServer) {
                    $azSqlServer = New-AzSqlServer -ResourceGroupName $(rgName) `
                    -ServerName $azSQLServerName `
                    -Location "$(rgLocation)" `
                    -SqlAdministratorCredentials $(New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $(adminSqlLogin), $(ConvertTo-SecureString -String $(adminSqlpassword) -AsPlainText -Force))
                }
                
                $azSqlFirwallRule = Get-AzSqlServerFirewallRule -FirewallRuleName 'FirewallRule_AccessRule' -ServerName $azSqlServerName -ResourceGroupName $(rgName) -ErrorAction SilentlyContinue
                if (-not $azSqlFirwallRule) {
                    # Create a server firewall rule that allows access from the specified IP range
                    $serverFirewallRule = New-AzSqlServerFirewallRule -ResourceGroupName $(rgName) `
                    -ServerName $azSQLServerName `
                    -FirewallRuleName "FirewallRule_AccessRule" -StartIpAddress $(ip) -EndIpAddress $(ip)
                }
                                
                $azSqlDatabase = Get-AzSqlDatabase -DatabaseName $(azSqlDatabaseName) -ServerName $azSQLServerName -ResourceGroupName $(rgName) -ErrorAction  SilentlyContinue
                if (-not $azSqlDatabase) {
                    $database = New-AzSqlDatabase  -ResourceGroupName $(rgName) `
                    -ServerName $azSQLServerName `
                    -DatabaseName $(azSqlDatabaseName) `
                    -Edition "Basic"    
                }
              azurePowerShellVersion: "LatestVersion"
